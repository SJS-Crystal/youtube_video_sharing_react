name: Deployment Workflow Template

on:
  workflow_call:
    inputs:
      DOCKER_IMAGE_TAG:
        description: 'Docker image tag'
        required: true
        type: string

      serverSelection:
        description: 'Enter server number (e.g., 1 for SERVER1, 2 for SERVER2)'
        required: true
        type: string

      environmentName:
        description: 'Enter the environment name'
        required: true
        type: string

      approvalEnvironmentName:
        description: 'Enter the approval environment name'
        required: true
        type: string

jobs:
  approval:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.approvalEnvironmentName }}

    steps:
      - name: Wait for approval
        run: echo "Waiting for admin approval..."

  manual_deploy:
    needs: [approval]
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environmentName }}

    steps:
      - name: Parse Server Information JSON
        run: |
          SERVERS_INFO_JSON='${{ secrets.SERVERS_INFO }}'
          SERVER_SELECTION=${{ inputs.serverSelection }}
          SERVER_INFO=$(echo $SERVERS_INFO_JSON | jq --arg key "$SERVER_SELECTION" '.[$key]')

          HOST=$(echo $SERVER_INFO | jq -r '.host')
          USER=$(echo $SERVER_INFO | jq -r '.user')
          SSH_KEY=$(echo $SERVER_INFO | jq -r '.ssh_key')



          echo "SERVER_HOST=$HOST" >> $GITHUB_ENV
          echo "SERVER_USER=$USER" >> $GITHUB_ENV
          echo "SERVER_SSH_KEY=$SSH_KEY" >> $GITHUB_ENV

      - uses: actions/checkout@v2

      - name: Deploy to Server

        run: |

          echo "-----BEGIN OPENSSH PRIVATE KEY-----
            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
            AwQFBg==
            -----END OPENSSH PRIVATE KEY-----
            " > server_ssh_file
          echo server_ssh_file
          chmod 400 server_ssh_file
          ssh -i server_ssh_file -o StrictHostKeyChecking=no ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} 'mkdir -p /home/project/'
          scp -i server_ssh_file -o StrictHostKeyChecking=no docker-compose.server.yml ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }}:/home/project/
          ssh -i server_ssh_file -o StrictHostKeyChecking=no ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} << 'EOF'
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            export DOCKER_IMAGE_TAG=${{ inputs.DOCKER_IMAGE_TAG }}
            export DOCKER_IMAGE_NAME=${{ secrets.DOCKER_IMAGE_NAME }}
            echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            cd /home/project/
            docker-compose -f docker-compose.server.yml down
            docker-compose -f docker-compose.server.yml up -d
          EOF
